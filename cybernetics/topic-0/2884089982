Current languages for system modelling impose limitations on how a system is described. For example system dynamics languages (e.g. Stella) assume that the only concern in modelling a system is its dynamics which can be expressed in stocks, flows, and regulators only. A language for describing systems in a general framework provides guidance for the analysis of real systems as well as a way to construct models of those systems suitable for simulation. The language being developed, system language (SL) for lack of a catchier name, consists of: · A set of lexical elements, terms that represent abstractions of components and entities that are found in all dynamic, complex systems to one extent or another - e.g. regulator, process, flow, boundaries, interfaces, etc. · A syntax for constructing the structure of a system including: o describing the boundary and its conditions (including expansion of boundaries as needed) o describing the hierarchical network of connections and relations (e.g. system of systems) o describing interfaces and protocols for entities to exchange flows o describing the behaviour of elements in the system (e.g. functions) o providing specific identifiers naming the abstract lexical elements (e.g. electrical power flow) o providing a set of attributes appropriate to the nature of the element (e.g. voltage, amperage, etc.) · A semantics that establishes patterns of connectivity and behaviour including: o distinction of material, energy, and message (communications) flows o laws of nature to be observed, e.g. conservation principles and second law of thermodynamics o imposes process-oriented abstraction on subsystems (similar to object-oriented modularization) o establishes rules for interfacing entities through flows o provides higher order organization and functions such as: § adaptivity (a capacity to vary behaviour in response to environmental changes within limits) § agency (an ability to make decisions – operational, logistical, tactical, or strategic in the framework of a hierarchical cybernetic governance system) § evolvability (an ability to add or modify functionality either through foresight or by chance) The language pragmatics is drawn from general systems theory as explicated in a set of principles of systems science. The language is formal and imposes rules of expression and construction that assure the resulting descriptions correspond with the nature of real systems in the world. It is proposed that SL can capture the essence, structure, and dynamics of any real physical system. For example the first author has used this language to describe the human brain and its relation with the body and environment meta-system. The construction involves analysing the brain as a hierarchical cybernetic governance system (HCGS) that manages the internal operations of the body (operations and logistical management) and its near-term interactions with the environment (tactical management). The human brain has been additionally shown to provide strategic management (coordination with a world that might be in the future!) A very similar analysis has been applied to organizations and their management. A recent survey of existing modelling languages has revealed only a limited capacity for these languages to support the SL framework. Existing languages generally support basic system dynamics and/or agent based (e.g. for explorations of emergent behaviour) approaches. Some are extensible through additional programming in languages like Java but do not directly address some of the more important features of SL. These results indicate that a new language should be developed to provide native support for SL directly. One immediate advantage of doing so is that the development approach can include support for massive multi-processing so that extremely large systems models can be developed. Modelling the human social system (HSS) would be an obvious target to help us understand our apparent predicament from a systems perspective. Normal 0 false false false EN-US X-NONE X-NONE /* Style Definitions */ table.MsoNormalTable {mso-style-name:"Table Normal"; mso-tstyle-rowband-size:0; mso-tstyle-colband-size:0; mso-style-noshow:yes; mso-style-priority:99; mso-style-parent:""; mso-padding-alt:0in 5.4pt 0in 5.4pt; mso-para-margin-top:0in; mso-para-margin-right:0in; mso-para-margin-bottom:8.0pt; mso-para-margin-left:0in; line-height:107%; mso-pagination:widow-orphan; font-size:11.0pt; font-family:"Calibri","sans-serif"; mso-ascii-font-family:Calibri; mso-ascii-theme-font:minor-latin; mso-hansi-font-family:Calibri; mso-hansi-theme-font:minor-latin;}